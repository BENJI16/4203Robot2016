// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team4203.robot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANTalon driveTrainLMotor1;
    public static CANTalon driveTrainLMotor2;
    public static RobotDrive driveTrainLeft;
    public static CANTalon driveTrainRMotor1;
    public static CANTalon driveTrainRMotor2;
    public static RobotDrive driveTrainRight;
    public static SpeedController intakeIntakeMotor;
    public static DoubleSolenoid intakePiston;
    public static SpeedController shooterWinchMotor;
    public static DoubleSolenoid shooterClaw;
    public static SpeedController aimerAimerMotor;
    public static Compressor pneumaticsCompressor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainLMotor1 = new CANTalon(0);
        LiveWindow.addActuator("Drive Train", "LMotor1", driveTrainLMotor1);
        
        driveTrainLMotor2 = new CANTalon(1);
        LiveWindow.addActuator("Drive Train", "LMotor2", driveTrainLMotor2);
        
        driveTrainLeft = new RobotDrive(driveTrainLMotor1, driveTrainLMotor2);
        
        driveTrainLeft.setSafetyEnabled(true);
        driveTrainLeft.setExpiration(0.1);
        driveTrainLeft.setSensitivity(0.5);
        driveTrainLeft.setMaxOutput(1.0);

        driveTrainRMotor1 = new CANTalon(2);
        LiveWindow.addActuator("Drive Train", "RMotor1", driveTrainRMotor1);
        
        driveTrainRMotor2 = new CANTalon(5);
        LiveWindow.addActuator("Drive Train", "RMotor2", driveTrainRMotor2);
        
        driveTrainRight = new RobotDrive(driveTrainRMotor1, driveTrainRMotor2);
        
        driveTrainRight.setSafetyEnabled(true);
        driveTrainRight.setExpiration(0.1);
        driveTrainRight.setSensitivity(0.5);
        driveTrainRight.setMaxOutput(1.0);

        intakeIntakeMotor = new Talon(0);
        LiveWindow.addActuator("Intake", "Intake Motor", (Talon) intakeIntakeMotor);
        
        
        intakePiston = new DoubleSolenoid(1, 1, 2);
        LiveWindow.addActuator("Intake", "Piston", intakePiston);
        
        shooterWinchMotor = new Talon(1);
        LiveWindow.addActuator("Shooter", "Winch Motor", (Talon) shooterWinchMotor);
        
        
        shooterClaw = new DoubleSolenoid(3, 3, 4);
        LiveWindow.addActuator("Shooter", "Claw", shooterClaw);
        
        aimerAimerMotor = new Talon(2);
        LiveWindow.addActuator("Aimer", "Aimer Motor", (Talon) aimerAimerMotor);
        
        pneumaticsCompressor = new Compressor(0);
        
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
